{
	"id": "377e6827-f544-4af2-b405-e1706adec5dd",
	"name": "udacity-fsnd-udaspicelatte",
	"allTests": [],
	"timestamp": "2019-11-01T20:46:27.200Z",
	"collection_id": "da276d2e-04e1-4b68-a206-39a4704c678e",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "0",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "da276d2e-04e1-4b68-a206-39a4704c678e",
		"name": "udacity-fsnd-udaspicelatte",
		"order": [],
		"folders_order": [
			"4768354a-3f6b-4710-becd-2e987089c3f7",
			"e45c563a-7b5d-44a2-b020-aad40f00bfd6",
			"b4497cc4-fe23-434e-b24f-23f25389d173"
		],
		"isFavorite": false
	},
	"folder": null,
	"environment": null,
	"globals": null,
	"results": [
		{
			"name": "/drinks",
			"id": "8f06798f-86f7-4360-b3cd-0c19b894c81b",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"11"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "11",
			"totalRequestTime": "11",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "d0fc2da8-71c2-41f6-8092-a9510e65e93a",
			"url": "localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"6"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "6",
			"totalRequestTime": "6",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "b64c3e89-df74-4351-a867-80a0dfe8ff06",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"5"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "5",
			"totalRequestTime": "5",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "a5ceb1f3-61ae-40b5-9712-102f3dfe88cf",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"5"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "5",
			"totalRequestTime": "5",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "b4dfd4f9-e9e6-4274-9d76-a05de2fef2ba",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"4"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "4",
			"totalRequestTime": "4",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "bd7bddd4-53f9-404d-bcfd-b3263aa61546",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"8"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "8",
			"totalRequestTime": "8",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "89700576-d26d-465f-8611-9c5a5b483798",
			"url": "localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"302"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "302",
			"totalRequestTime": "302",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "82b5f814-4358-4c4c-963c-4369080838b6",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"249"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "249",
			"totalRequestTime": "249",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "10e54bb3-88f7-4c76-a310-0fa6d9581118",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"252"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "252",
			"totalRequestTime": "252",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "eae51241-6944-4a4e-badc-24d973d87a5d",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"260"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "260",
			"totalRequestTime": "260",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "85b71bb9-0d8f-4015-8222-70f3bf202b06",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"9"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "9",
			"totalRequestTime": "9",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "3cc6b301-1f43-49f8-b729-e625c42dd08f",
			"url": "localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"251"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "251",
			"totalRequestTime": "251",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "b2e80f62-83ea-4b86-b401-33fc35ea69e0",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"262"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "262",
			"totalRequestTime": "262",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "8fd7f723-f37a-4c54-b8d1-a601c957b777",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"260"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "260",
			"totalRequestTime": "260",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "93369dd2-7281-4a2d-a7b6-ffc4db30873b",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"249"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "249",
			"totalRequestTime": "249",
			"iterationResults": {}
		}
	],
	"totalPass": 20,
	"totalFail": 0,
	"totalTime": 2133,
	"lifecycle": "done",
	"requests": [
		{
			"name": "/drinks",
			"id": "8f06798f-86f7-4360-b3cd-0c19b894c81b",
			"url": "localhost:5000/drinks",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "d0fc2da8-71c2-41f6-8092-a9510e65e93a",
			"url": "localhost:5000/drinks-detail",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "b64c3e89-df74-4351-a867-80a0dfe8ff06",
			"url": "localhost:5000/drinks",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "a5ceb1f3-61ae-40b5-9712-102f3dfe88cf",
			"url": "localhost:5000/drinks/1",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "b4dfd4f9-e9e6-4274-9d76-a05de2fef2ba",
			"url": "localhost:5000/drinks/1",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "bd7bddd4-53f9-404d-bcfd-b3263aa61546",
			"url": "localhost:5000/drinks",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "89700576-d26d-465f-8611-9c5a5b483798",
			"url": "localhost:5000/drinks-detail",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "82b5f814-4358-4c4c-963c-4369080838b6",
			"url": "localhost:5000/drinks",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "10e54bb3-88f7-4c76-a310-0fa6d9581118",
			"url": "localhost:5000/drinks/1",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "eae51241-6944-4a4e-badc-24d973d87a5d",
			"url": "localhost:5000/drinks/1",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "85b71bb9-0d8f-4015-8222-70f3bf202b06",
			"url": "localhost:5000/drinks",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "3cc6b301-1f43-49f8-b729-e625c42dd08f",
			"url": "localhost:5000/drinks-detail",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "b2e80f62-83ea-4b86-b401-33fc35ea69e0",
			"url": "localhost:5000/drinks",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "8fd7f723-f37a-4c54-b8d1-a601c957b777",
			"url": "localhost:5000/drinks/1",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "93369dd2-7281-4a2d-a7b6-ffc4db30873b",
			"url": "localhost:5000/drinks/1",
			"time": "2019-11-01T20:46:27.200Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}